<?xml version="1.0" encoding="utf-8"?>
<package >
  <metadata>
    <id>TheByteStuff.AzureTableUtilities</id>
    <version>4.2.2</version>
    <title>AzureTableUtilities</title>
    <authors>The Byte Stuff, LLC</authors>
    <owners>The Byte Stuff, LLC</owners>
    <license type="expression">MIT</license>
    <icon>images\CardFront_Clip.png</icon>
    <projectUrl>https://www.thebytestuff.com/azure-tables-backup-documentation?utm_source=nuget&amp;utm_medium=www&amp;utm_campaign=AzureTableUtilities</projectUrl>
    <requireLicenseAcceptance>true</requireLicenseAcceptance>
    <description>
      Backup, Copy, Delete and Restore options for use with Azure Tables.  An alternative to tools such as AZCopy.

      Backup destination may be to a local file or to Azure storage blob.  File may be optionally compressed (zipped).
      Copy allows for the same or different connection spec for Source and Destination.
      Restore location may be from local file or Azure storage blob.
      Blob storage and Azure Table storage connection specs may point to different servers to allow for use in production backup scenarios as well as for restoration of development environments.

      Restore/Copy will create the table if it does not exist, however data on an existing table will not be deleted. It may be overwritten depending on the source data.

      Delete allows for full table deletion as well as for rows.

      When working with Blob storage, a folder in the format {BlobRootName}--table-{TableName} will be used to store the file or retreive the file under the Blob root specified.
      File created will be in the format {TableName}_Backup_{TimeStamp}.

      Backup, Copy and Delete operations allow for an optional list of filters (Filter) to be provided to select a subset of the source data for the transation.

      Refer to project url for code snippets and additional information.

      The Byte Stuff, LLC is not affiliated with Microsoft nor has Microsoft endorsed this project.

      Personal and commercial use of this software is free; however, a donation is appreciated if you find the software useful.

      Code for a command line executable along with sample Docker build is available on GitHub -- https://github.com/TheByteStuff/AzureTableBackupRestore

      Suggestions or donations are both appreciated and welcome can be made by using the "Contact" tab at https://www.thebytestuff.com/Contact?utm_source=nuget&amp;utm_medium=www&amp;utm_campaign=AzureTableUtilities

      v5.0.0-pre - beta including Cosmos Table 2.0.0 Preview
      v4.xxx - Added additional parameter validation,
      v4.2.2 - Corrected problem with filters on backup to blob
      v4.2.1 - Corrected Nuspec to show .Net Standard in docs
      v4.2.0 - Change target framework from .Net Core 2.0 to .Net Standard 2.0
      v4.1.0 - Added RowKey option to Filters, update Microsoft.Azure.Cosmos version to 3.10.1
      v4.0.2 - updated Nuspec to minimum dependent versions
      v4.0.1 - updated Nuspec to minimum dependent versions
      v4.0 - Updated package dependencies to latest released versions, removed Microsoft.Extensions.Configuration; Microsoft.Extensions.Configuration.Json; Microsoft.Extensions.Configuration.FileExtensions as they are not needed by base libraries
      v3.0 - added delete table option, refactored base exception to be AzureTableUtilitiesException, updated class/method documentation
      v2.1 - added Filter constructor, corrected return message on successful copy.
      v2.0 - added "Copy" option as well as Filters.
      v1.0 - Initial release.
    </description>
    <releaseNotes>Added RowKey option to Filters</releaseNotes>
    <copyright>Copyright 2020</copyright>
    <tags>AzureTables AZCopy Backup Copy Delete Restore</tags>
    <dependencies>
      <group targetFramework=".NETStandard2.0">
        <dependency id="Azure.Storage.Blobs" version="12.4.4" />
        <dependency id="Microsoft.Azure.Cosmos" version="3.10.1" />
        <dependency id="Microsoft.Azure.Cosmos.Table" version="1.0.7" />
        <dependency id="Microsoft.Azure.Storage.Blob" version="11.1.7" />
        <dependency id="Microsoft.Azure.Storage.File" version="11.1.7" />
        <dependency id="Newtonsoft.Json" version="12.0.3" />
      </group>
    </dependencies>
    <frameworkAssemblies>
      <frameworkAssembly assemblyName="System.Net"  />
      <frameworkAssembly assemblyName="System.ServiceModel" targetFramework="NETStandard2.0" />
    </frameworkAssemblies>
  </metadata>
  <files>
    <file src=".\CardFront_Clip.png" target="images\"/>
  </files>
</package>